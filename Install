#!/bin/bash
#
# Install -m 6-0-16-2 -d 6-0-16-3
#

cd `dirname $0`
if [ ! -e Configuration ]; then
  echo "No configuration file."
  exit 1
fi
source Configuration

until [ -z "$1" ]  # Until all parameters used up . . .
do
    case "$1" in
    -m) 
        shift
        MGV_VER=$1
        nargs=$((nargs-2))
        ;;  
    -d) 
        shift
        MGV_DATA_VER=$1
        nargs=$((nargs-2))
        ;;  
    *)
        echo "Unrecognized option:" $1
        exit -1
    esac
    shift
done

#----------------------------------------
# mgv_data

if [[ "${MGV_DATA_VER}" != "" ]]; then
    if [ ! -e ${MGV_DATA_DIR} ] ; then
        git clone git@github.com:mgijax/mgv_data.git ${MGV_DATA_DIR}
    fi
    cd ${MGV_DATA_DIR}
    git pull
    git checkout ${MGV_DATA_VER}
    sed -i "s@^export DDIR=.*@export DDIR=\"${MGV_DATA_DROOT}/downloads\"@" wrapperConfig.sh
    sed -i "s@^export ODIR=.*@export ODIR=\"${MGV_DATA_DROOT}/output\"@" wrapperConfig.sh
    sed -i "s@^export PYTHON=.*@export PYTHON=\"${PYTHON}\"@" wrapperConfig.sh
fi

#----------------------------------------
# mgv

if [[ ${MGV_VER} != "" ]] ; then
    if [ ! -e ${MGV_DIR} ] ; then
        git clone git@github.com:mgijax/mgv.git ${MGV_DIR}
    fi
    cd ${MGV_DIR}
    git pull
    git checkout ${MGV_VER}
    npm install
    npm run build
    rm -f dist/mgv_web_data
    ln -s ${MGV_DATA_DROOT}/output dist/mgv_web_data
fi
