#!/bin/bash
#
# With no arguments, intalls the versions of mgv and mgv_data defined in Configuration.
# You can override these settings on the command line with these args:
#       -m VER   Specifies the version of mgv to install. VER is a branch or tag name
#       -d VER   Specifies the version of mgv_data to install. VER is a branch or tag name
#

cd `dirname $0`
if [ ! -e Configuration ]; then
  echo "No configuration file."
  exit 1
fi
source Configuration

until [ -z "$1" ]  # Until all parameters used up . . .
do
    case "$1" in
    -m) 
        shift
        MGV_VER=$1
        nargs=$((nargs-2))
        ;;  
    -d) 
        shift
        MGV_DATA_VER=$1
        nargs=$((nargs-2))
        ;;  
    *)
        echo "Unrecognized option:" $1
        exit -1
    esac
    shift
done

#----------------------------------------
# mgv_data
#
# To install, clone the repo, switch to the desired branch/tag, and update the wrapperConfig.
# Also need to set the URL for downloading MGI.gff3.
#

if [[ "${MGV_DATA_VER}" != "" ]]; then
    if [ ! -e ${MGV_DATA_DIR} ] ; then
        git clone git@github.com:mgijax/mgv_data.git ${MGV_DATA_DIR}
    fi
    cd ${MGV_DATA_DIR}
    #
    git checkout master
    git pull
    git checkout ${MGV_DATA_VER}
    #
    sed -i "s@^export DDIR=.*@export DDIR=\"${MGV_DATA_DROOT}/downloads\"@" wrapperConfig.sh
    sed -i "s@^export ODIR=.*@export ODIR=\"${MGV_DATA_DROOT}/output\"@" wrapperConfig.sh
    sed -i "s@^export PYTHON=.*@export PYTHON=\"${PYTHON}\"@" wrapperConfig.sh
    # Set location of MGI.gff3 using FTPURL (from mgiconfig)
    sed -i "s@http://www.informatics.jax.org/downloads/mgigff3/MGI.gff3.gz@${FTPURL}/downloads/mgigff3/MGI.gff3.gz@" buildConfig.json
fi

#----------------------------------------
# mgv
#
# To build, clone the repo, switch to the specified branch/tag, then use npm
# to install dependencies and build the web dist. Then create soft links to
# (a) hook mgv up with the data from mgv_data and (b) set the top-level path to
# the app.
#

if [[ ${MGV_VER} != "" ]] ; then
    if [ ! -e ${MGV_DIR} ] ; then
        git clone git@github.com:mgijax/mgv.git ${MGV_DIR}
    fi
    cd ${MGV_DIR}
    #
    git checkout master
    git pull
    git checkout ${MGV_VER}
    #
    npm install
    npm run build
    #
    rm -f dist/mgv_web_data
    ln -s ${MGV_DATA_DROOT}/output dist/mgv_web_data
    #
    rm -f ${MGV_SOFT_LINK}
    ln -s ${MGV_DIR}/dist ${MGV_SOFT_LINK}
fi
